What it is like when your company is acquired
    or, how to lose your culture in one easy step

        We were the kind of place that software companies try to sound like on their websites.

        competition instead of community: perceived limited survivors.
        Overnight loss of connectivity and rapport
        uncertainty
        turnover, layoffs
        Loss of tribal knowledge



Dev Bod
    Brain Fog
        Sleep
        Leg exercises ( https://pmc.ncbi.nlm.nih.gov/articles/PMC10097495/#:~:text=Conclusions,improving%20femoral%20artery%20blood%20flow. )
        Diet
            carb loading ( https://pubmed.ncbi.nlm.nih.gov/29851417/#:~:text=Recent%20findings%3A%20Chronic%20consumption%20of,pathways%20may%20also%20be%20altered. )
            vitamins
                D deficiency leads to fatigue and sleep problems ( https://pmc.ncbi.nlm.nih.gov/articles/PMC8912284/#:~:text=Specifically%2C%20vitamin%20D%20deficiency%20(VDD,still%20far%20from%20being%20elucidated. )
    Hand Care
        Stretches
        Warning signs
        Ergonomics

    Posture
        Standing desk
        Warrior pose



A dev's job is to break unit tests
    New features: TDD
    Bugfixes: should break existing tests
    Negative tests



Growth mindset
    interacting with others
    identifying other mindset types



Hand and Brain Pair Programming
    how to get everyone involved



The Art of the Nerd Snipe: How to ask questions that people want to answer
    DO NOT JUST SAY "HELLO". I can't triage a hello. https://nohello.net/en/
    Do not ask if you can ask https://dontasktoask.com/
    Include them in the goal

    Don't just ask for help with the tiny step you are on, include context https://xyproblem.info/
    Be clear you are planning to be part of the investigation, a partner, not a demandee

    try things first
        RTFM
        Google your problem
        don't just be instantly helpless

    Mention what you have already tried in your question
        This brings helpers along for the ride
        Avoids duplicating effort: be respectful of volunteer's time

    Describe what you observe, not your guess as to what is going wrong

    You will get answers that reflect your question's quality.
        Hasty questions that are not thought-out will often get hasty answers
        Pointing blame will immediately turn of readers

    thoughts
        http://catb.org/~esr/faqs/smart-questions.html
        https://xkcd.com/356/



Upgrading from old versions of node: Trials and tribulations
    https://www.npmjs.com/package/npm-check-updates ( ncu doctor )
    cache clean force
    lock only
    no scripts



Cultural lessons visiting Japan: challenging assumptions about workplace culture
        People can rise to expectations, good or bad
    no trash, no trash cans
    no tipping, still good service
    Leaving space on escalators
    No noise on trains



Gdscript / godot



Double cruxing: optimal ways to resolve conflicting expectations
    https://www.rationality.org/resources/updates/2016/double-crux




Prompts:
What am I encountering in my project?
What answers can't I find online?
What am I experimenting with?
What can't I stop thinking about?
What works well at work? what doesn't work well?

Hot take: call out products or practices
Best practices
Describe an approach or technique you learned
Look at exiting spin posts for ideas, or those that need updating